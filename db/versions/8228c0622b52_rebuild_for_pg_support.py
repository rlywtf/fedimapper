"""rebuild_for_pg_support

Revision ID: 8228c0622b52
Revises: 
Create Date: 2023-01-03 11:01:31.128549

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8228c0622b52"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "asn",
        sa.Column("asn", sa.String(), nullable=False),
        sa.Column("cc", sa.String(), nullable=True),
        sa.Column("owner", sa.String(), nullable=True),
        sa.Column("prefix", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("asn"),
    )
    op.create_table("evil", sa.Column("domain", sa.String(), nullable=False), sa.PrimaryKeyConstraint("domain"))
    op.create_table(
        "instance_stats",
        sa.Column("host", sa.String(), nullable=False),
        sa.Column("ingest_time", sa.DateTime(), server_default=sa.text("(CURRENT_TIMESTAMP)"), nullable=False),
        sa.Column("user_count", sa.Integer(), nullable=True),
        sa.Column("active_monthly_users", sa.Integer(), nullable=True),
        sa.Column("status_count", sa.Integer(), nullable=True),
        sa.Column("domain_count", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("host", "ingest_time"),
    )
    op.create_table(
        "instances",
        sa.Column("host", sa.String(), nullable=False),
        sa.Column("digest", sa.String(), nullable=True),
        sa.Column("last_ingest", sa.DateTime(), nullable=True),
        sa.Column("last_ingest_status", sa.String(), nullable=True),
        sa.Column("last_ingest_success", sa.DateTime(), nullable=True),
        sa.Column("first_ingest_success", sa.DateTime(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("short_description", sa.String(), nullable=True),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("current_user_count", sa.Integer(), nullable=True),
        sa.Column("current_status_count", sa.Integer(), nullable=True),
        sa.Column("current_domain_count", sa.Integer(), nullable=True),
        sa.Column("thumbnail", sa.String(), nullable=True),
        sa.Column("registration_open", sa.Boolean(), nullable=True),
        sa.Column("approval_required", sa.Boolean(), nullable=True),
        sa.Column("has_public_bans", sa.Boolean(), nullable=True),
        sa.Column("has_public_peers", sa.Boolean(), nullable=True),
        sa.Column("software", sa.String(), nullable=True),
        sa.Column("mastodon_version", sa.String(), nullable=True),
        sa.Column("software_version", sa.String(), nullable=True),
        sa.Column("nodeinfo_version", sa.String(), nullable=True),
        sa.Column("ip_address", sa.String(), nullable=True),
        sa.Column("asn", sa.String(), nullable=True),
        sa.Column("base_domain", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("host"),
    )
    op.create_index("idx_instance_status_time", "instances", ["last_ingest_status", "last_ingest"], unique=False)
    op.create_index(op.f("ix_instances_base_domain"), "instances", ["base_domain"], unique=False)
    op.create_index(op.f("ix_instances_digest"), "instances", ["digest"], unique=False)
    op.create_table(
        "bans",
        sa.Column("host", sa.String(), nullable=False),
        sa.Column("ingest_id", sa.String(), nullable=False),
        sa.Column("banned_host", sa.String(), nullable=False),
        sa.Column("digest", sa.String(), nullable=True),
        sa.Column("severity", sa.String(), nullable=False),
        sa.Column("comment", sa.String(), nullable=True),
        sa.Column("keywords", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["host"],
            ["instances.host"],
        ),
        sa.PrimaryKeyConstraint("host", "banned_host"),
    )
    op.create_index(op.f("ix_bans_digest"), "bans", ["digest"], unique=False)
    op.create_table(
        "peers",
        sa.Column("host", sa.String(), nullable=False),
        sa.Column("peer_host", sa.String(), nullable=False),
        sa.Column("ingest_id", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["host"],
            ["instances.host"],
        ),
        sa.ForeignKeyConstraint(
            ["peer_host"],
            ["instances.host"],
        ),
        sa.PrimaryKeyConstraint("host", "peer_host"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("peers")
    op.drop_index(op.f("ix_bans_digest"), table_name="bans")
    op.drop_table("bans")
    op.drop_index(op.f("ix_instances_digest"), table_name="instances")
    op.drop_index(op.f("ix_instances_base_domain"), table_name="instances")
    op.drop_index("idx_instance_status_time", table_name="instances")
    op.drop_table("instances")
    op.drop_table("instance_stats")
    op.drop_table("evil")
    op.drop_table("asn")
    # ### end Alembic commands ###
